rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // --- A CORREÇÃO FINAL ESTÁ NESTE BLOCO ---
    match /users/{userId} {
      allow read: if request.auth != null && (
        // 1. O usuário pode ler o seu próprio perfil.
        request.auth.uid == userId ||
        // 2. Um 'master' pode ler qualquer perfil.
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'master' ||
        // 3. (BLINDADO) Um 'gerente' pode ler o perfil de um 'operacional' se eles compartilharem pelo menos um cliente.
        (
          get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'gerente' &&
          resource.data.role == 'operacional' &&
          // Verificações de existência (mantidas por segurança)
          'clientesPermitidos' in get(/databases/$(database)/documents/users/$(request.auth.uid)).data &&
          'clientesPermitidos' in resource.data &&
          // ADICIONADO: Garante que os campos são do tipo LISTA (array) antes de usar o hasAny
          get(/databases/$(database)/documents/users/$(request.auth.uid)).data.clientesPermitidos is list &&
          resource.data.clientesPermitidos is list &&
          // A verificação 'hasAny' agora é 100% segura
          get(/databases/$(database)/documents/users/$(request.auth.uid)).data.clientesPermitidos.hasAny(resource.data.clientesPermitidos)
        )
      );

      allow write: if request.auth != null && (
        request.auth.uid == userId ||
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'master'
      );
    }
    // --- FIM DA CORREÇÃO ---

    // Regras restantes inalteradas
    match /artifacts/default-app-id/public/data/wasteRecords/{recordId} {
      allow create: if request.auth != null &&
                      get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['master', 'gerente', 'operacional'];
      allow read: if request.auth != null &&
                    get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['master', 'gerente', 'operacional'];
      allow update, delete: if request.auth != null && (
                                resource.data.userId == request.auth.uid || 
                                get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'master'
                              );
    }

    match /clientes/{clienteId} {
      allow read: if request.auth != null && (
                    (get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'master') ||
                    (clienteId in get(/databases/$(database)/documents/users/$(request.auth.uid)).data.clientesPermitidos)
                  );
      allow write: if request.auth != null &&
                       get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'master';
    }

    match /empresasColeta/{empresaId} {
      allow read, write: if request.auth != null &&
                           get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'master';
    }
  }
}